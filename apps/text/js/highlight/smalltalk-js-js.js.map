{"version":3,"file":"highlight/smalltalk-js-js.js?v=4f6d82ebcd3f3151782e","mappings":"6IAmEAA,EAAOC,QA5DP,SAAmBC,GACjB,MAAMC,EAAe,qBACfC,EAAO,CACXC,UAAW,SACXC,MAAO,WAEHC,EAAS,CACbF,UAAW,SACXC,MAAO,IAAMJ,EAAKM,qBAEpB,MAAO,CACLC,KAAM,YACNC,QAAS,CAAE,MACXC,SAAU,CACR,OACA,QACA,MACA,OACA,QACA,eAEFC,SAAU,CACRV,EAAKW,QAAQ,IAAK,KAClBX,EAAKY,iBACL,CACET,UAAW,OACXC,MAAO,wBACPS,UAAW,GAEb,CACET,MAAOH,EAAe,IACtBY,UAAW,GAEbb,EAAKc,cACLT,EACAH,EACA,CAIEE,MAAO,UAAYH,EAAe,QAAUA,EAAe,YAC3Dc,aAAa,EACbC,IAAK,KACLC,QAAS,KACTP,SAAU,CAAE,CAAEN,MAAO,aAAeH,KAEtC,CACEG,MAAO,OACPY,IAAK,MACLN,SAAU,CACRV,EAAKY,iBACLV,EACAF,EAAKc,cACLT,KAKV,C,kBCjEA,SAASa,IACAA,EAAYC,SACfD,EAAYC,QAAS,EACrBC,QAAQC,IACN,2KAGN,CACAH,GACEpB,EAAOC,QAAU,EAAjB,M","sources":["webpack:///text/node_modules/highlight.js/lib/languages/smalltalk.js","webpack:///text/node_modules/highlight.js/lib/languages/smalltalk.js.js"],"sourcesContent":["/*\nLanguage: Smalltalk\nDescription: Smalltalk is an object-oriented, dynamically typed reflective programming language.\nAuthor: Vladimir Gubarkov <xonixx@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Smalltalk\n*/\n\nfunction smalltalk(hljs) {\n  const VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  const CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    name: 'Smalltalk',\n    aliases: [ 'st' ],\n    keywords: [\n      \"self\",\n      \"super\",\n      \"nil\",\n      \"true\",\n      \"false\",\n      \"thisContext\"\n    ],\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true,\n        end: /\\|/,\n        illegal: /\\S/,\n        contains: [ { begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE } ]\n      },\n      {\n        begin: '#\\\\(',\n        end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = smalltalk;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/smalltalk\" instead of \"highlight.js/lib/languages/smalltalk.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./smalltalk.js');"],"names":["module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","name","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal","emitWarning","warned","console","log"],"sourceRoot":""}