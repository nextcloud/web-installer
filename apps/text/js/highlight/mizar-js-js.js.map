{"version":3,"file":"highlight/mizar-js-js.js?v=ff24b8c6c86289c5853d","mappings":"qIA0BAA,EAAOC,QAlBP,SAAeC,GACb,MAAO,CACLC,KAAM,QACNC,SACE,ylBAUFC,SAAU,CAAEH,EAAKI,QAAQ,KAAM,MAEnC,C,mBCxBA,SAASC,IACAA,EAAYC,SACfD,EAAYC,QAAS,EACrBC,QAAQC,IACN,mKAGN,CACAH,GACEP,EAAOC,QAAU,EAAjB,M","sources":["webpack:///text/node_modules/highlight.js/lib/languages/mizar.js","webpack:///text/node_modules/highlight.js/lib/languages/mizar.js.js"],"sourcesContent":["/*\nLanguage: Mizar\nDescription: The Mizar Language is a formal language derived from the mathematical vernacular.\nAuthor: Kelley van Evert <kelleyvanevert@gmail.com>\nWebsite: http://mizar.org/language/\nCategory: scientific\n*/\n\nfunction mizar(hljs) {\n  return {\n    name: 'Mizar',\n    keywords:\n      'environ vocabularies notations constructors definitions '\n      + 'registrations theorems schemes requirements begin end definition '\n      + 'registration cluster existence pred func defpred deffunc theorem '\n      + 'proof let take assume then thus hence ex for st holds consider '\n      + 'reconsider such that and in provided of as from be being by means '\n      + 'equals implies iff redefine define now not or attr is mode '\n      + 'suppose per cases set thesis contradiction scheme reserve struct '\n      + 'correctness compatibility coherence symmetry assymetry '\n      + 'reflexivity irreflexivity connectedness uniqueness commutativity '\n      + 'idempotence involutiveness projectivity',\n    contains: [ hljs.COMMENT('::', '$') ]\n  };\n}\n\nmodule.exports = mizar;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/mizar\" instead of \"highlight.js/lib/languages/mizar.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./mizar.js');"],"names":["module","exports","hljs","name","keywords","contains","COMMENT","emitWarning","warned","console","log"],"sourceRoot":""}